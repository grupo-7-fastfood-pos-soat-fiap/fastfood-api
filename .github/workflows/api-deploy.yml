name: Deploy API image to Amazon ECR

on:
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  API_ECR_REPOSITORY: fastfood-api
  ECS_SERVICE: svc-fastfooodapi
  ECS_CLUSTER: fastfoodapi
  ECS_TASK_DEFINITION: .github/task-definition.json
  CONTAINER_NAME: container-fastfoodapi

permissions:
      id-token: write
      contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Restore, build and teste API
      run: |
        dotnet restore
        dotnet build --no-restore
        dotnet test --no-build --verbosity normal
        
  deploy:
    name: Deploy API Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          role-to-assume: arn:aws:iam::235145177657:role/testeRole
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Run Docker build, tag and push
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }} 
        run: |
          docker build -t $ECR_REGISTRY/$API_ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$API_ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$API_ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true